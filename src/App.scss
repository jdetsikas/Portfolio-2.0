////////////////////
// Global Styles //
///////////////////

.col {
  display: flex;
  flex-direction: column;
};

.row {
  display: flex;
  flex-direction: row;
};

#app {
  min-height: 100vh;
  width: 100%;
  margin: 0;
  padding: 0;
  background-color: gray;
  align-items: center;
  color: #212121;
  background: linear-gradient(180deg, #ffffff 50%, #ced7e6 100%);
};

#content-area {
  --hor-padding: 60px;

  min-height: 100vh;
  width: 100%;
  max-width: calc(1000px - (var(--hor-padding) * 2));
  // background-color: white;
  padding: 0px var(--hor-padding);
};

@media (max-width: 840px) {
  #content-area {
    --hor-padding: 40px;
  };
};

@media (max-width: 600px) {
  #content-area {
    --hor-padding: 20px;
  };
};


////////////////
// CSS Reset //
///////////////
/* 1. Use a more-intuitive box-sizing model */
*, *::before, *::after {
  box-sizing: border-box;
}

/* 2. Remove default margin */
* {
  margin: 0;
}

/* 3. Enable keyword animations */
@media (prefers-reduced-motion: no-preference) {
  html {
    interpolate-size: allow-keywords;
  }
}

body {
  /* 4. Add accessible line-height */
  line-height: 1.5;
  /* 5. Improve text rendering */
  -webkit-font-smoothing: antialiased;
}

/* 6. Improve media defaults */
img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

/* 7. Inherit fonts for form controls */
input, button, textarea, select {
  font: inherit;
}

/* 8. Avoid text overflows */
p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

/* 9. Improve line wrapping */
p {
  text-wrap: pretty;
}
h1, h2, h3, h4, h5, h6 {
  text-wrap: balance;
}

/*
  10. Create a root stacking context
*/
#root, #__next {
  isolation: isolate;
}